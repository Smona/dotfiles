#export LANG="en_US.UTF-8"
export TERM="xterm-256color"

# Directories to be prepended to $PATH
declare -a dirs_to_prepend
dirs_to_prepend=(
  "/usr/local/"
  "/usr/local/sbin"
  "/usr/local/git/bin"
  "/usr/local/opt/coreutils/libexec/gnubin" # Add brew-installed GNU core utilities bin
  "/usr/local/mysql/bin"
  "$HOME/dotfiles/bin"
  "$HOME/bin"
  "$HOME/.rvm/bin"
  #"$(brew --prefix ruby)/bin"
  "$HOME/miniconda3/bin"
)

# Explicitly configured $PATH
PATH="/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:$PATH"

if [ -d "$HOME/.local/bin" ]; then
  PATH="$HOME/.local/bin:$PATH"
fi

for dir in ${(k)dirs_to_prepend[@]}
do
  if [ -d ${dir} ]; then
   # If these directories exist, then prepend them to existing PATH
    PATH="${dir}:$PATH"
  fi
done

unset dirs_to_prepend

export PATH

#
## User configuration
#
## Load the shell dotfiles
for file in $HOME/.{shell_exports,shell_aliases,shell_functions,shell_config}; do
  [ -r "$file" ] && [ -f "$file" ] && source "$file";
done;
unset file;

#if command -v "brew" && [ -f `brew --prefix`/etc/bash_completion ]; then
#  . `brew --prefix`/etc/bash_completion
#fi

# Automatically list directory contents on `cd`.
auto-ls () {
  emulate -L zsh;
  # explicit sexy ls'ing as aliases arent honored in here.
  hash gls >/dev/null 2>&1 && CLICOLOR_FORCE=1 gls -aFh --color --group-directories-first || ls
}
chpwd_functions=( auto-ls $chpwd_functions )

## Source local extra (private) settings specific to machine if it exists
[ -f ~/.zsh.local ] && source ~/.zsh.local

# virtualenvwrapper
if [ -d  "$HOME/.local/bin/virtualenvwrapper.sh" ]; then
  export WORKON_HOME=$HOME/.virtualenvs   # Optional
  export PROJECT_HOME=$HOME/projects      # Optional
  source "$HOME/.local/bin/virtualenvwrapper.sh"
fi

# fortune: brew install fortune ponysay
# fortune | ponysay

# Source Prezto.
source "${ZDOTDIR:-$HOME}/.zprezto/init.zsh"

# automatically switch to correct node version on cd
autoload -U add-zsh-hook
load-nvmrc() {
  local node_version="$(nvm version)"
  local nvmrc_path="$(nvm_find_nvmrc)"
  if [ -n "$nvmrc_path" ]; then
    local nvmrc_node_version=$(nvm version "$(cat "${nvmrc_path}")")

    if [ "$nvmrc_node_version" = "N/A" ]; then
      nvm install
    elif [ "$nvmrc_node_version" != "$node_version" ]; then
      nvm use
    fi
  elif [ "$node_version" != "$(nvm version default)" ]; then
    echo "Reverting to nvm default version"
    nvm use default
  fi
}
add-zsh-hook chpwd load-nvmrc
load-nvmrc


# added by travis gem
[ -f /home/smona/.travis/travis.sh ] && source /home/smona/.travis/travis.sh
fpath=($fpath "/home/mason/.zfunctions")

# Set Spaceship ZSH as a prompt
autoload -U promptinit; promptinit
prompt spaceship

fpath=($fpath "/home/mason/.zfunctions")

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
