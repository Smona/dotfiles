" VUNDLE

set nocompatible              " be iMproved, required
filetype off                  " required

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
" alternatively, pass a path where Vundle should install plugins
"call vundle#begin('~/some/path/here')

" let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'

Plugin 'scrooloose/nerdtree'
Plugin 'Xuyuanp/nerdtree-git-plugin'
Plugin 'vim-airline/vim-airline'
Plugin 'w0rp/ale'
Plugin 'othree/html5.vim'
Plugin 'posva/vim-vue'
Plugin 'vim-airline/vim-airline-themes'
Plugin 'tpope/vim-fugitive'
Plugin 'airblade/vim-gitgutter'
Plugin 'ctrlpvim/ctrlp.vim'
Plugin 'liuchengxu/space-vim-dark'

" All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required

" Brief help
" :PluginList       - lists configured plugins
" :PluginInstall    - installs plugins; append `!` to update or just :PluginUpdate
" :PluginSearch foo - searches for foo; append `!` to refresh local cache
" :PluginClean      - confirms removal of unused plugins; append `!` to auto-approve removal

" OTHER SETTINGS
:let mapleader = "-"
map <C-n> :NERDTreeToggle<CR>
"let g:NERDTreeDirArrows=0
let g:airline_powerline_fonts = 1
let g:airline#extensions#tabline#enabled = 1
colorscheme space-vim-dark
let g:airline_theme='violet'
" let g:solarized_base16 = 1
" let g:airline_solarized_bg='dark'
let g:ale_linters = {
\   'javascript': ['eslint', 'prettier-eslint'],
\}
let g:ale_fixers = {
\   'javascript': ['prettier-eslint'],
\}
let g:ctrlp_map = '<c-p>'
let g:ctrlp_cmd = 'CtrlPBuffer'
let g:ctrlp_by_filename = 0
let g:ctrlp_user_command = ['.git', 'cd %s && git ls-files -co --exclude-standard']

set encoding=utf-8
set notermguicolors
set autoindent
syntax enable   " enable syntax processing
set number  "enable line numbers
set cursorline          " highlight current line
set showcmd     " show partial command
set showmatch           " highlight matching [{()}]

" Indent Settings
set tabstop=2       " number of visual spaces per TAB
set softtabstop=2   " number of spaces in tab when editing
set shiftwidth=2    " number of spaces when reindinting
set expandtab       " tabs are spaces

" Search Settings
set incsearch           " search as characters are entered
set hlsearch            " highlight matches
" turn off search highlight
nnoremap <leader><space> :nohlsearch<CR>

" Add powerline
"set rtp+=$HOME/.local/lib/python2.7/site-packages/powerline/bindings/vim/
"set rtp+=/usr/local/lib/python2.7/site-packages/powerline/bindings/vim

" Always show statusline
set laststatus=2

" Use 256 colours (Use this setting only if your terminal supports 256 colours)
"set t_Co=256

" Folding settings
set foldenable          " enable folding
set foldlevelstart=10   " open most folds by default
set foldmethod=indent   " fold based on indent level
" space open/closes folds
nnoremap <space> za

" wildmenu
set wildmenu
set wildmode=longest:full,full

" Buffers
set hidden

" To open a new empty buffer
" This replaces :tabnew which I used to bind to this mapping
nmap <leader>T :enew<cr>

" Move to the next buffer
nmap <leader>- :bnext<CR>

" Move to the previous buffer
nmap <leader>h :bprevious<CR>

" Close the current buffer and move to the previous one
" This replicates the idea of closing a tab
nmap <leader>bq :bp <BAR> bd #<CR>
